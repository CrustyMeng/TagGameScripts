-- ReplicatedStorage/Modules/Game/HUDManager.lua
-- Server-side HUD state management and broadcasting

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local GameConfig = require(script.Parent.GameConfig)

local HUDManager = {}

-- Create remote for HUD updates
local remotes = ReplicatedStorage:FindFirstChild("Remotes")
if not remotes then
	remotes = Instance.new("Folder")
	remotes.Name = "Remotes"
	remotes.Parent = ReplicatedStorage
end

local hudUpdateRemote = remotes:FindFirstChild("UpdateHUD")
if not hudUpdateRemote then
	hudUpdateRemote = Instance.new("RemoteEvent")
	hudUpdateRemote.Name = "UpdateHUD"
	hudUpdateRemote.Parent = remotes
end

-- Debug logging
local function debugLog(message: string)
	if GameConfig.Debug.Enabled and table.find(GameConfig.Debug.Channels, "HUD") then
		print("[HUD] " .. message)
	end
end

-- Update HUD for a specific player
function HUDManager.UpdatePlayer(player: Player, gameState: string, mode: string?, map: string?)
	local TeamsService = require(script.Parent.TeamsService)
	local playerRole = TeamsService.GetPlayerRole(player) or "Spectator"

	hudUpdateRemote:FireClient(player, {
		gameState = gameState,
		playerRole = playerRole,
		mode = mode,
		map = map
	})

	debugLog("Updated " .. player.Name .. " | State: " .. gameState .. " | Role: " .. playerRole)
end

-- Update HUD for all players
function HUDManager.UpdateAllPlayers(gameState: string, mode: string?, map: string?)
	for _, player in pairs(Players:GetPlayers()) do
		HUDManager.UpdatePlayer(player, gameState, mode, map)
	end

	debugLog("Updated all players | State: " .. gameState)
end

-- Called when game state changes
function HUDManager.OnStateChange(newState: string, mode: string?, map: string?)
	HUDManager.UpdateAllPlayers(newState, mode, map)
end

-- Called when a player's role changes (e.g., becomes tagger/player)
function HUDManager.OnPlayerRoleChange(player: Player, gameState: string, mode: string?, map: string?)
	HUDManager.UpdatePlayer(player, gameState, mode, map)
end

return HUDManager
