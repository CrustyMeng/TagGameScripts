-- StarterPlayer/StarterPlayerScripts/HUDClient.client.lua
-- Initialize the HUD on the client side

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local player = Players.LocalPlayer

-- Wait for the game modules to load
local GameConfig = require(ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Game"):WaitForChild("GameConfig"))
local HUD = require(ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Game"):WaitForChild("UI"):WaitForChild("HUD"))

-- Config helper
local function Cfg(path)
	local keys = string.split(path, ".")
	local value = GameConfig
	for _, key in ipairs(keys) do
		value = value[key]
		if not value then break end
	end
	return value
end

-- Listen for HUD initialization signal from server
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local initHUDRemote = remotes:WaitForChild(Cfg("RemoteNames.InitHUD"))
local updateHUDRemote = remotes:WaitForChild(Cfg("RemoteNames.UpdateHUD"))

initHUDRemote.OnClientEvent:Connect(function()
	HUD.Initialize()
	print("[HUD] Client HUD initialized")
end)

-- Listen for HUD display updates
updateHUDRemote.OnClientEvent:Connect(function(data)
	HUD.UpdateDisplay(data.gameState, data.playerRole, data.mode, data.map)
end)

-- Also initialize immediately if character already exists
if player.Character then
	task.wait(1)
	HUD.Initialize()
	print("[HUD] Client HUD initialized (immediate)")
end
